=begin comment

Big Book API

Big Book API lets you semantically search over 4 million English books by text, genre, author, ISBN, and more. You can also find books that are similar to each other.

The version of the OpenAPI document: 1.0
Contact: mail@bigbookapi.com
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More;
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::DefaultApi');

my $api = WWW::OpenAPIClient::DefaultApi->new();
isa_ok($api, 'WWW::OpenAPIClient::DefaultApi');

#
# find_similar_books test
#
# uncomment below and update the test
#my $find_similar_books_id = undef; # replace NULL with a proper value
#my $find_similar_books_number = undef; # replace NULL with a proper value
#my $find_similar_books_result = $api->find_similar_books(id => $find_similar_books_id, number => $find_similar_books_number);

#
# get_book_information test
#
# uncomment below and update the test
#my $get_book_information_id = undef; # replace NULL with a proper value
#my $get_book_information_result = $api->get_book_information(id => $get_book_information_id);

#
# search_authors test
#
# uncomment below and update the test
#my $search_authors_name = undef; # replace NULL with a proper value
#my $search_authors_offset = undef; # replace NULL with a proper value
#my $search_authors_number = undef; # replace NULL with a proper value
#my $search_authors_result = $api->search_authors(name => $search_authors_name, offset => $search_authors_offset, number => $search_authors_number);

#
# search_books test
#
# uncomment below and update the test
#my $search_books_query = undef; # replace NULL with a proper value
#my $search_books_earliest_publish_year = undef; # replace NULL with a proper value
#my $search_books_latest_publish_year = undef; # replace NULL with a proper value
#my $search_books_min_rating = undef; # replace NULL with a proper value
#my $search_books_max_rating = undef; # replace NULL with a proper value
#my $search_books_genres = undef; # replace NULL with a proper value
#my $search_books_authors = undef; # replace NULL with a proper value
#my $search_books_isbn = undef; # replace NULL with a proper value
#my $search_books_oclc = undef; # replace NULL with a proper value
#my $search_books_sort = undef; # replace NULL with a proper value
#my $search_books_sort_direction = undef; # replace NULL with a proper value
#my $search_books_group_results = undef; # replace NULL with a proper value
#my $search_books_offset = undef; # replace NULL with a proper value
#my $search_books_number = undef; # replace NULL with a proper value
#my $search_books_result = $api->search_books(query => $search_books_query, earliest_publish_year => $search_books_earliest_publish_year, latest_publish_year => $search_books_latest_publish_year, min_rating => $search_books_min_rating, max_rating => $search_books_max_rating, genres => $search_books_genres, authors => $search_books_authors, isbn => $search_books_isbn, oclc => $search_books_oclc, sort => $search_books_sort, sort_direction => $search_books_sort_direction, group_results => $search_books_group_results, offset => $search_books_offset, number => $search_books_number);


done_testing();
